manifest should match snapshot:
  1: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Tiller
        app.kubernetes.io/name: velero
        helm.sh/chart: velero-2.14.0
      name: RELEASE-NAME-velero
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: velero
      template:
        metadata:
          annotations:
            prometheus.io/path: /metrics
            prometheus.io/port: "8085"
            prometheus.io/scrape: "true"
          labels:
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/managed-by: Tiller
            app.kubernetes.io/name: velero
            helm.sh/chart: velero-2.14.0
            name: velero
        spec:
          containers:
          - args:
            - server
            command:
            - /velero
            env:
            - name: VELERO_SCRATCH_DIR
              value: /scratch
            - name: VELERO_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: LD_LIBRARY_PATH
              value: /plugins
            image: velero/velero:v1.5.2
            imagePullPolicy: IfNotPresent
            name: velero
            ports:
            - containerPort: 8085
              name: monitoring
            volumeMounts:
            - mountPath: /plugins
              name: plugins
          initContainers:
          - image: velero/velero-plugin-for-aws:v1.1.0
            imagePullPolicy: IfNotPresent
            name: velero-plugin-for-aws
            volumeMounts:
            - mountPath: /target
              name: plugins
          restartPolicy: Always
          serviceAccountName: velero
          volumes:
          - emptyDir: {}
            name: plugins
          - emptyDir: {}
            name: scratch
  2: |
    apiVersion: velero.io/v1
    kind: BackupStorageLocation
    metadata:
      annotations:
        helm.sh/hook: post-install,post-upgrade
        helm.sh/hook-delete-policy: before-hook-creation
      labels:
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Tiller
        app.kubernetes.io/name: velero
        helm.sh/chart: velero-2.14.0
      name: default
    spec:
      config:
        profile: test
        region: us-west-1
      objectStorage:
        bucket: velero
      provider: aws
  3: |
    apiVersion: apps/v1
    kind: DaemonSet
    metadata:
      labels:
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Tiller
        app.kubernetes.io/name: velero
        helm.sh/chart: velero-2.14.0
      name: restic
    spec:
      selector:
        matchLabels:
          name: restic
      template:
        metadata:
          labels:
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/managed-by: Tiller
            app.kubernetes.io/name: velero
            helm.sh/chart: velero-2.14.0
            name: restic
        spec:
          containers:
          - args:
            - restic
            - server
            command:
            - /velero
            env:
            - name: VELERO_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: VELERO_SCRATCH_DIR
              value: /scratch
            image: velero/velero:v1.5.2
            imagePullPolicy: IfNotPresent
            name: restic
            securityContext:
              privileged: false
            volumeMounts:
            - mountPath: /host_pods
              mountPropagation: HostToContainer
              name: host-pods
            - mountPath: /scratch
              name: scratch
          securityContext:
            runAsUser: 0
          serviceAccountName: velero
          volumes:
          - hostPath:
              path: /var/lib/kubelet/pods
            name: host-pods
          - emptyDir: {}
            name: scratch
  4: |
    apiVersion: velero.io/v1
    kind: VolumeSnapshotLocation
    metadata:
      annotations:
        helm.sh/hook: post-install,post-upgrade
        helm.sh/hook-delete-policy: before-hook-creation
      labels:
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Tiller
        app.kubernetes.io/name: velero
        helm.sh/chart: velero-2.14.0
      name: default
    spec:
      config:
        bucket: velero
        region: us-west-1
      provider: aws
  5: |
    apiVersion: velero.io/v1
    kind: Schedule
    metadata:
      annotations:
        helm.sh/hook: post-install,post-upgrade
        helm.sh/hook-delete-policy: before-hook-creation
      labels:
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Tiller
        app.kubernetes.io/name: velero
        helm.sh/chart: velero-2.14.0
        myenv: foo
      name: RELEASE-NAME-velero-mybackup
    spec:
      schedule: 0 0 * * *
      template:
        includedNamespaces:
        - foo
        ttl: 240h
