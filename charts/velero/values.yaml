##
## Configuration settings that directly affect the Velero deployment YAML.
##

# Details of the container image to use in the Velero deployment & daemonset (if
# enabling restic). Required.
image:
  repository: velero/velero
  tag: v1.5.2
  # Digest value example: sha256:d238835e151cec91c6a811fe3a89a66d3231d9f64d09e5f3c49552672d271f38. If used, it will
  # take precedence over the image.tag.
  # digest:
  pullPolicy: IfNotPresent
  # One or more secrets to be used when pulling images
  imagePullSecrets: []
  # - registrySecretName

# default plugin images to enabled when used by providers
pluginImages:
  alibabacloud:
    repository: registry.cn-hangzhou.aliyuncs.com/acs/velero-plugin-alibabacloud
    tag: v1.1.0
    pullPolicy: IfNotPresent
  aws:
    repository: velero/velero-plugin-for-aws
    tag: v1.1.0
    pullPolicy: IfNotPresent
  azure:
    repository: velero/velero-plugin-for-microsoft-azure
    tag: v1.1.0
    pullPolicy: IfNotPresent
  csi:
    repository: velero/velero-plugin-for-csi
    tag: v0.1.1
    pullPolicy: IfNotPresent
  gcp:
    repository: velero/velero-plugin-for-gcp
    tag: v1.1.0
    pullPolicy: IfNotPresent

# Additional plugin images to install
# Supports a comma seperated string
# plugins: 'velero/velero-plugin-for-aws:v1.1.0,velero/velero-plugin-for-csi:v0.1.1'
#
# Or an array of images as strings and/or objects
# plugins:
#   - velero/velero-plugin-for-aws:v1.1.0
#   - repository: velero/velero-plugin-for-csi
#     digest: sha256:60d47fd25216f13073525823a067eab223d12e695d4b41e480aa3ff13a58c916
#     pullPolicy: Always
plugins: []


# Annotations to add to the Velero deployment's pod template. Optional.
#
# If using kube2iam or kiam, use the following annotation with your AWS_ACCOUNT_ID
# and VELERO_ROLE_NAME filled in:
podAnnotations: {}
  #  iam.amazonaws.com/role: "arn:aws:iam::<AWS_ACCOUNT_ID>:role/<VELERO_ROLE_NAME>"

# Additional pod labels for Velero deployment's template. Optional
# ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

# Resource requests/limits to specify for the Velero deployment. Optional.
resources: {}

# Init containers to add to the Velero deployment's pod spec.
initContainers: []


# SecurityContext to use for the Velero deployment. Optional.
# Set fsGroup for `AWS IAM Roles for Service Accounts`
# see more informations at: https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts.html
securityContext: {}
  # fsGroup: 1337

# Pod priority class name to use for the Velero deployment. Optional.
priorityClassName: ""

# Tolerations to use for the Velero deployment. Optional.
tolerations: []

# Affinity to use for the Velero deployment. Optional.
affinity: {}

# Node selector to use for the Velero deployment. Optional.
nodeSelector: {}

# Extra volumes for the Velero deployment. Optional.
extraVolumes: []

# Extra volumeMounts for the Velero deployment. Optional.
extraVolumeMounts: []

# Settings for Velero's prometheus metrics. Enabled by default.
metrics:
  enabled: true

  # Pod annotations for Prometheus
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8085"
    prometheus.io/path: "/metrics"

# Install CRDs as a templates. Enabled by default.
installCRDs: true

##
## End of deployment-related settings.
##


##
## Parameters for the `default` BackupStorageLocation and VolumeSnapshotLocation,
## and additional server settings.
##
# Cloud provider being used (e.g. aws, azure, gcp).
provider:

# Parameters for the `default` BackupStorageLocation. See
# https://velero.io/docs/v1.4/api-types/backupstoragelocation/
backupStorageLocation:
  # name is the name of the backup storage location where backups should be stored. If a name is not provided,
  # a backup storage location will be created with the name "default". Optional.
  name:
  # provider is the name for the backup storage location provider. If omitted
  # `provider` will be used instead.
  provider:
  # bucket is the name of the bucket to store backups in. Required.
  bucket:
  # caCert defines a base64 encoded CA bundle to use when verifying TLS connections to the provider.
  caCert:
  # prefix is the directory under which all Velero data should be stored within the bucket. Optional.
  prefix:
  # Additional provider-specific configuration. See link above
  # for details of required/optional fields for your provider.
  config: {}
  #  region:
  #  s3ForcePathStyle:
  #  s3Url:
  #  kmsKeyId:
  #  resourceGroup:
  #  The ID of the subscription containing the storage account, if different from the cluster’s subscription. (Azure only)
  #  subscriptionId:
  #  storageAccount:
  #  publicUrl:
  #  Name of the GCP service account to use for this backup storage location. Specify the
  #  service account here if you want to use workload identity instead of providing the key file.(GCP only)
  #  serviceAccount:

# Parameters for the `default` VolumeSnapshotLocation. See
# https://velero.io/docs/v1.4/api-types/volumesnapshotlocation/
volumeSnapshotLocation:
  # name is the name of the volume snapshot location where snapshots are being taken. Required.
  name:
  # provider is the name for the volume snapshot provider. If omitted
  # `configuration.provider` will be used instead.
  provider:
  # Additional provider-specific configuration. See link above
  # for details of required/optional fields for your provider.
  config: {}
#    region:
#    apitimeout:
#    resourceGroup:
#    The ID of the subscription where volume snapshots should be stored, if different from the cluster’s subscription. If specified, also requires `volumeSnapshotLocation.config.resourceGroup`to be set. (Azure only)
#    subscriptionId:
#    snapshotLocation:
#    project:

# These are server-level settings passed as CLI flags to the `velero server` command. Velero
# uses default values if they're not passed in, so they only need to be explicitly specified
# here if using a non-default value. The `velero server` default values are shown in the
# comments below.
# --------------------
# `velero server` default: 1m
backupSyncPeriod:
# `velero server` default: 1h
resticTimeout:
# `velero server` default: namespaces,persistentvolumes,persistentvolumeclaims,secrets,configmaps,serviceaccounts,limitranges,pods
restoreResourcePriorities:
# `velero server` default: false
restoreOnlyMode:

# additional key/value pairs to be used as environment variables such as "AWS_CLUSTER_NAME: 'yourcluster.domain.tld'"
extraEnvVars: {}

# Comma separated list of velero feature flags. default: empty
features:

# Set log-level for Velero pod. Default: info. Other options: debug, warning, error, fatal, panic.
logLevel:

# Set log-format for Velero pod. Default: text. Other option: json.
logFormat:

# Set true for backup all pod volumes without having to apply annotation on the pod when used restic Default: false. Other option: false.
defaultVolumesToRestic:

##
## End of backup/snapshot location settings.
##


##
## Settings for additional Velero resources.
##

rbac:
  # Whether to create the Velero role and role binding to give all permissions to the namespace to Velero.
  create: true
  # Whether to create the cluster role binding to give administrator permissions to Velero
  clusterAdministrator: true

# Information about the Kubernetes service account Velero uses.
serviceAccount:
  server:
    create: true
    name:
    annotations:

# Info about the secret to be used by the Velero deployment, which
# should contain credentials for the cloud provider IAM account you've
# set up for Velero.
credentials:
  # Name of a pre-existing secret (if any) in the Velero namespace
  # that should be used to get IAM account credentials. Optional.
  # existingSecret:

  # Key within a pre-existing secret (if any) in the Velero namespace
  # that should be used to get IAM account credentials. Optional.
  existingSecretKey: cloud

  # Data to be stored in the Velero secret, if `useSecret` is
  # true and `existingSecret` is empty. This should be the contents
  # of your IAM credentials file.
  secretContents: {}

  # additional key/value pairs to be used as environment variables such as "DIGITALOCEAN_TOKEN: <your-key>". Values will be stored in the secret.
  extraEnvVars: {}

# Whether to create backupstoragelocation crd, if false => do not create a default backup location
backupsEnabled: true
# Whether to create volumesnapshotlocation crd, if false => disable snapshot feature
snapshotsEnabled: true

restic:
  # Whether to deploy the restic daemonset.
  enabled: false
  podVolumePath: /var/lib/kubelet/pods
  privileged: false
  # Pod priority class name to use for the Restic daemonset. Optional.
  priorityClassName: ""
  # Resource requests/limits to specify for the Restic daemonset deployment. Optional.
  resources: {}
  # Tolerations to use for the Restic daemonset. Optional.
  tolerations: []

  # Extra volumes for the Restic daemonset. Optional.
  extraVolumes: []

  # Extra volumeMounts for the Restic daemonset. Optional.
  extraVolumeMounts: []

  # SecurityContext to use for the Velero deployment. Optional.
  # Set fsGroup for `AWS IAM Roles for Service Accounts`
  # see more informations at: https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts.html
  securityContext: {}
    # fsGroup: 1337

# Backup schedules to create.
# Eg:
# schedules:
#   - name: mybackup
#     labels:
#       myenv: foo
#     schedule: "0 0 * * *"
#     template:
#       ttl: "240h"
#       includedNamespaces:
#        - foo

# Velero ConfigMaps.
# Eg:
# configMaps:
#   restic-restore-action-config:
#     labels:
#       velero.io/plugin-config: ""
#       velero.io/restic: RestoreItemAction
#     data:
#       image: velero/velero-restic-restore-helper:v1.3.1
configMaps: {}

##
## End of additional Velero resource settings.
##

# Deprecated
configuration:
  backupStorageLocation: {}
  volumeSnapshotLocation: {}
